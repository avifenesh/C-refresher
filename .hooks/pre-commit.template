#!/bin/bash

# Git pre-commit hook for Linux kernel style formatting
# This hook runs before each commit to ensure code formatting compliance

set -e

echo "üîç Running pre-commit formatting check..."

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Not in a git repository"
    exit 1
fi

# Get the list of staged C files
STAGED_C_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(c|h)$' || true)

if [ -z "$STAGED_C_FILES" ]; then
    echo "‚ÑπÔ∏è  No C files staged for commit"
    # Don't exit here - let git continue with the commit
else
    echo "üìã Checking staged C files: $STAGED_C_FILES"

    # Check if clang-format is available
    if ! command -v clang-format >/dev/null 2>&1; then
        echo "‚ùå clang-format not found. Install with: sudo apt-get install clang-format"
        echo "üí° Skipping formatting check..."
        # Don't exit here - let git continue with the commit
    else
        # Linux kernel style configuration
        CLANG_FORMAT_STYLE="{BasedOnStyle: LLVM, IndentWidth: 8, UseTab: Always, BreakBeforeBraces: Linux, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 80, AlignTrailingComments: true, SpaceBeforeParens: ControlStatements, KeepEmptyLinesAtTheStartOfBlocks: false}"

        # Check formatting for each staged file
        FAILED_FILES=""
        for file in $STAGED_C_FILES; do
            echo "  üîç Checking $file..."
            
            # Check if file exists (might be deleted)
            if [ ! -f "$file" ]; then
                echo "    ‚ÑπÔ∏è  File deleted, skipping"
                continue
            fi
            
            # Check formatting
            if ! clang-format --style="$CLANG_FORMAT_STYLE" "$file" | diff -u "$file" - >/dev/null; then
                echo "    ‚ùå $file needs formatting"
                FAILED_FILES="$FAILED_FILES $file"
            else
                echo "    ‚úÖ $file is properly formatted"
            fi
        done

        # If any files failed formatting check
        if [ -n "$FAILED_FILES" ]; then
            echo ""
            echo "‚ùå Commit aborted! The following files need formatting:"
            for file in $FAILED_FILES; do
                echo "  - $file"
            done
            echo ""
            echo "üí° Fix formatting issues:"
            echo "  Option 1: Run 'make format' to format all C files"
            echo "  Option 2: Format specific files:"
            for file in $FAILED_FILES; do
                echo "    clang-format -i --style=\"$CLANG_FORMAT_STYLE\" $file"
            done
            echo ""
            echo "  Option 3: Skip this check (not recommended):"
            echo "    git commit --no-verify"
            exit 1
        fi

        echo "‚úÖ All staged C files are properly formatted!"
    fi
fi

echo "üöÄ Proceeding with commit..."
# Don't exit here - let git continue with the commit process and apply signoff
